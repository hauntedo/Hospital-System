plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
}

//ext {
//    database = new Properties().with {
//        load(file("C:\\Users\\Rustem\\Desktop\\SimbirTest\\src\\main\\resources\\db\\db.properties").newReader())
//        it
//    }
//}

group = 'ru.itis.hauntedo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module : 'spring-boot-starter-logging'
    all*.exclude module : 'logback-classic'
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.7.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.openapitools:openapi-generator:6.2.0'
    implementation "javax.validation:validation-api:2.0.1.Final"
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.7.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '3.0.0'

    liquibaseRuntime 'org.liquibase:liquibase-core:3.8.9'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime("ch.qos.logback:logback-core:1.2.3")
    liquibaseRuntime("ch.qos.logback:logback-classic:1.2.3")
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime 'org.springframework.data:spring-data-jpa'
    liquibaseRuntime 'org.springframework.boot:spring-boot'
    liquibaseRuntime 'org.yaml:snakeyaml:1.26'
    liquibaseRuntime sourceSets.main.output

}
tasks.named('test') {
    useJUnitPlatform()
}

//liquibase {
//    activities {
//        main {
//            changeLogFile "C:\\Users\\Rustem\\Desktop\\SimbirTest\\src\\main\\resources\\db\\changelog\\changelog.yaml" //указываем куда и с каким именем генерится файл
//            //данные для доступа к бд
//            url database.getProperty("url")
//            username database.getProperty("username")
//            password database.getProperty("password")
//            //указываем путь к entity, а так же настройки для hibernate(диалект, сратегии наименования)
//            referenceUrl 'hibernate:spring:entity?dialect=org.hibernate.dialect.PostgreSQL10Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
//            logLevel 'debug' //если хотим видить логи при выполнение команд
//        }
//        runList = "main"
//    }
//}

sourceSets.main.java.srcDir "$buildDir/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/src/main/resources"

